Design a data structure that supports all following operations in average O(1) time.

1. insert(val): Inserts an item val to the set if not already present.
2. remove(val): Removes an item val from the set if present.
3. getRandom: Returns a random element from current set of elements. Each element must have the same probability of being returned.

This question is about how to design a new data structure which is similar with one or more of the primitive data structures.
Basic thoughts: for every single task list all data structures which can provide the function, then find a way to combine them or modify one of them.

Primitive data structures:
Array
Linked list
Stack
Queue
Map/Set
Hashmap/Hashset
Priority_queue

Basic operations:
insert
delete
search
update

Hashmap provides insert and delete in average constant time, while array/vector provides contant time insert and getRandom.
