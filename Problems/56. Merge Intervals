1. Description
Given a collection of intervals, merge all overlapping intervals.

Example 1:

Input: [[1,3],[2,6],[8,10],[15,18]]
Output: [[1,6],[8,10],[15,18]]
Explanation: Since intervals [1,3] and [2,6] overlaps, merge them into [1,6].

2. Instant Reaction

What happen if sort this vector? It will be sorted by the first number of each 2D sub-vector.
After sorting, scan the vector and check.

3. First Accepted

class Solution {
public:
    vector<vector<int>> merge(vector<vector<int>>& intervals) {
        vector<vector<int>> res;
        sort(intervals.begin(), intervals.end());
        int n = intervals.size();
        int i = 0;
        while(i<n){
            int j = i+1;
            vector<int> tmp = intervals[i];
            while(j<n) {
                if(tmp[1]>=intervals[j][0]){
                    tmp[1] = max(tmp[1],intervals[j][1]);
                    j++;
                }
                else{break;}
            }
            i = j;
            res.push_back(tmp);
        }
        return res;
    }
};
